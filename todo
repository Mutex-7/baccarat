The plan:
Server boots up.
Starts new game immediately.
Send new game page to client.
Client starts with new game.

Client has a button to load most recent save.
  Send load message to server.
  Server parses file on disk. Validation, etc. Spec!
  Sends game data to client. Will have to send entire history as well.
  Client parses. Spec?
  Client updates it's atoms.

Client has button to save game to edn.
  Notify server to save the game.
  Server saves a copy of the game state to disk.
  Server notifies client that game was saved (un?)successfully.

Then to deal with this shitty UI.

TODO:
CSS:
  -have the textboxes beside the label, not under.
  -get all historical display components to be in a second column on the screen.
SVG:
  -???
remotes:
  -input validation, send error message to client if input was bogus somehow.
  -do some spec here
  -handle a save command
  -handle a load command
components/round-results:
  -colored text based on black or red card.
  -indicate result of hand (player win, dealer win, tie).
  -indicate diff in money.
components/bet-update:
  -update running stats as much as possible
  -validate the results we get
  -spec?
  -handle case where the server tells us about bogus input
components/place-bet:
  -Is this a bit long or repetetive? Refactor with a macro or something?
